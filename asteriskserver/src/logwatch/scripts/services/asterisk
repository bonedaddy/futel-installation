# MCB 02/18/2012  found on:  http://logwatch.org/pipermail/logwatch-devel/2009-June/002085.html
#                 download:  http://szary.org/projects/scripts/logwatch/asterisk-logwatch-1.09.tar.gz

$Debug = $ENV{'LOGWATCH_DEBUG'} || 0;
#$Detail = $ENV{'LOGWATCH_DETAIL_LEVEL'} || 0;

if ( $Debug >= 5 ) {
   print STDERR "\n\nDEBUG: Inside Asterisk Filter \n\n";
   $DebugCounter = 1;
}

while (defined($ThisLine = <STDIN>)) {
   if ( $Debug >= 5 ) {
      print STDERR "DEBUG($DebugCounter): $ThisLine";
      $DebugCounter++;
   }
   if ( ( $ThisLine =~ /VERBOSE/ ) or
      ( $ThisLine =~ /DEBUG/ ) or
      ( $ThisLine =~ /Asterisk 11.5.1 built by asterisk/ ) or
      ( $ThisLine =~ /Starting AEL load process/ ) or
      ( $ThisLine =~ /AEL load process:/) or
      ( $ThisLine =~ /CDR simple logging enabled./ ) or
      ( $ThisLine =~ /modules will be loaded./ ) or
      ( $ThisLine =~ /Removed default indication country/ ) or
      ( $ThisLine =~ /Comfort noise support incomplete in Asterisk/ ) or 
      ( $ThisLine =~ /Received SNMP/ ) or 
      ( $ThisLine =~ /Connection from UDP/ ) or
      ( $ThisLine =~ /Reloading say.conf/ ) or
      ( $ThisLine =~ /Received SIP subscribe for peer without mailbox:/ ) or
      ( $ThisLine =~ /Skinny Session returned: Success/ ) or
      ( $ThisLine =~ /No SMDI interfaces are available to listen on, not starting SMDI listener./ ) or
      ( $ThisLine =~ /res_musiconhold.c: poll() failed: Interrupted system call/ ) or
      ( $ThisLine =~ /Codec mismatch on channel .* setting write format to slin from ulaw native formats (ulaw)/ ) or
      ( $ThisLine =~ /chan_sip.c: SIP Transfer attempted with no appropriate bridged calls to transfer/ ) or
      ( $ThisLine =~ /chan_sip.c: Purely numeric hostname (.*), and not a peer--rejecting!/ ) or      
      ( $ThisLine =~ /app_voicemail.c: Couldn't read username/ ) or
      ( $ThisLine =~ /app_voicemail.c: Unable to read password/ ) or
      ( $ThisLine =~ /app_voicemail.c: No entry in voicemail config file for/ ) or
      ( $ThisLine =~ /Unknown RTP codec 126 received from/ ) ) {    
                # nop, we don't care about these
      } elsif  ( ( $ThisLine =~ /WARNING/ ) or 
      ( $ThisLine =~ /Got SIP response 484 "Address Incomplete"/ ) or
      #( $ThisLine =~ /Got SIP response 486 "Busy Here"/ ) or
      ( $ThisLine =~ /Got SIP response 603 "Declined"/ ) or
      #( $ThisLine =~ /Everyone is busy\/congested at this time/ ) or
      ( $ThisLine =~ /rejected because extension not found./ ) or
      ( $ThisLine =~ /AEL declining load/ ) or 
      ( $ThisLine =~ /No such label/ ) or
      ( $ThisLine =~ /Failed to authenticate on INVITE to/ ) or
      ( $ThisLine =~ /Unable to create\/find SIP channel for this INVITE/ ) or 
      ( $ThisLine =~ /Invalid keyword/ ) or
      ( $ThisLine =~ /No compatible codecs, not accepting this offer/ ) or
      ( $ThisLine =~ /Unable to open management configuration manager.conf./ ) ) {
      $Warnings{$ThisLine}++;
   } elsif ( $ThisLine =~ /ERROR/ ) {
      $Errors{$ThisLine}++;
   } elsif ( ( $ThisLine =~ /is now UNREACHABLE/ ) or
      ( $ThisLine =~ /is now Lagged/ ) or
      ( $ThisLine =~ /timed out, trying again/ ) or
      ( $ThisLine =~ /is now Reachable/ ) ) {
      $Unreachables{$ThisLine}++;
   } elsif ( ( $ThisLine =~ /No matching peer found/ ) or
      ( $ThisLine =~ /Wrong password/ ) or
      ( $ThisLine =~ /failed to authenticate as/ ) or
      ( $ThisLine =~ /Specified User not found/ ) or 
      ( $ThisLine =~ /Failed to authenticate user/ ) or
      ( $ThisLine =~ /tried to authenticate with nonexistent user/ ) ) {
      $HackAttempt{$ThisLine}++;
   } else {
      # Report any unmatched entries...
      push @OtherList,$ThisLine;
   }
}

if (keys %Warnings) {
   print "\nWARNINGS:\n";
   foreach $ThisOne (sort keys %Warnings) {
      print "   " . $ThisOne;
   }
}
if (keys %Errors) {
   print "\nERRORS:\n";
   foreach $ThisOne (sort keys %Errors) {
      print "   " . $ThisOne;
   }
}

if (keys %Unreachables) {
   print "\nUnreachable or Lagged:\n";
   foreach $ThisOne (sort keys %Unreachables) {
      print "   " . $ThisOne;
   }
}

if (keys %HackAttempts) {
   print "\nHack Attempts:\n";
   foreach $ThisOne (sort keys %HackAttempts) {
      print "   " . $ThisOne;
   }
}

if ($#OtherList >= 0) {
   print "\n**Unmatched Entries**\n";
   print @OtherList;
}

exit(0);

# vi: shiftwidth=3 tabstop=3 syntax=perl et

