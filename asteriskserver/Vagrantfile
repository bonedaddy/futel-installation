VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.define "default"
  config.vm.box = "test_32"
  config.vm.synced_folder ".", "/vagrant",
    :mount_options => ["dmode=777,fmode=777"]

  config.vm.provision "baseinstall", type: "ansible" do |ansible|
    ansible.playbook = "baseinstall_playbook.yml"    
    
    # default vm gets baseinstall ansible inventory group
    ansible.groups = {
      "baseinstall" => ["default"]
    }
    ansible.extra_vars = {
      conf_version: "virtualbox"
    }
    # uncomment for verbose output
    # ansible.raw_arguments = ["-v"]
  end    

  config.vm.provision "update_asterisk", type: "ansible" do |ansible|
    ansible.playbook = "update_asterisk_playbook.yml"    
    
    # default vm gets baseinstall ansible inventory group
    ansible.groups = {
      "baseinstall" => ["default"]
    }
    ansible.extra_vars = {
      conf_version: "virtualbox"
    }
    # uncomment for verbose output
    # ansible.raw_arguments = ["-v"]
  end    
  
  # use this environment variable to build with production ssh port/user
  if ENV['vagrantbox'] == 'centos6_32_baseconfig'
    # we put ssh on 42422, so override default 2222 guest port
    config.vm.network "forwarded_port", guest: 42422, host: 2222, id: "ssh"
    # we will want another ssh key for non-virtualbox
    config.ssh.username = "futel"
    config.ssh.private_key_path = "conf/id_rsa"
    # if we put ssh on 42422 and are virtualbox, forward that port
    config.ssh.guest_port = 42422
    config.ssh.port = 2222
  end

  config.vm.provider :virtualbox do |vb|
    # uncomment to disable headless mode
    # vb.gui = true
    # bridged network, may have specific setup for each host
    # interface differs with OS, debian/thinkpad may be 'wlp3s0'
    # Must be a working interface with an IP address, for example
    # 'wlan0', 'wlp3s0', is there a way to create
    # one without a device? On my ubuntu box, creating a wireless hotspot works.
    config.vm.network :public_network, :bridge => 'wlan0'
  end

end
